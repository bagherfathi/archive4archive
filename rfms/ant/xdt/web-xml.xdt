<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
  <XDtConfig:ifConfigParamNotEquals paramName="Smallicon" value="">
   <icon>
      <small-icon><XDtConfig:configParameterValue paramName="Smallicon"/></small-icon>
      <large-icon><XDtConfig:configParameterValue paramName="Largeicon"/></large-icon>
   </icon>
  </XDtConfig:ifConfigParamNotEquals>
  <XDtConfig:ifConfigParamNotEquals paramName="Displayname" value="">
   <display-name><XDtConfig:configParameterValue paramName="Displayname"/></display-name>
  </XDtConfig:ifConfigParamNotEquals>
  <XDtConfig:ifConfigParamNotEquals paramName="Description" value="">
   <description><![CDATA[<XDtConfig:configParameterValue paramName="Description"/>]]></description>
  </XDtConfig:ifConfigParamNotEquals>

  <XDtMerge:merge file="web-settings.xml">
  </XDtMerge:merge>
  
  <XDtConfig:forAllConfigParameters paramName="contextParams">
   <context-param>
     <XDtConfig:ifConfigParamGreaterOrEquals paramName="Servletspec" value="2.4">
<XDtConfig:ifConfigParamNotEquals paramName="contextParams.description" value="">
      <description><![CDATA[<XDtConfig:configParameterValue paramName="contextParams.description"/>]]></description>
</XDtConfig:ifConfigParamNotEquals>
     </XDtConfig:ifConfigParamGreaterOrEquals>
      <param-name><XDtConfig:configParameterValue paramName="contextParams.name"/></param-name>
      <param-value><XDtConfig:configParameterValue paramName="contextParams.value"/></param-value>
     <XDtConfig:ifConfigParamNotGreaterOrEquals paramName="Servletspec" value="2.4">
<XDtConfig:ifConfigParamNotEquals paramName="contextParams.description" value="">
      <description><![CDATA[<XDtConfig:configParameterValue paramName="contextParams.description"/>]]></description>
</XDtConfig:ifConfigParamNotEquals>
     </XDtConfig:ifConfigParamNotGreaterOrEquals>
   </context-param>
  </XDtConfig:forAllConfigParameters>


 <XDtConfig:ifConfigParamGreaterOrEquals paramName="Servletspec" value="2.3">

  <XDtMerge:merge file="filters.xml">
    <!--
    To use non XDoclet filters, create a filters.xml file that
    contains the additional filters (eg Sitemesh) and place it in your
    project's merge dir.  Don't include filter-mappings in this file,
    include them in a file called filter-mappings.xml and put that in
    the same directory.
    -->
  </XDtMerge:merge>
<!--
  <XDtClass:forAllClasses type="javax.servlet.Filter" abstract="false">
   <filter>
     <XDtClass:ifHasClassTag tagName="web:filter" paramName="icon">
      <icon><XDtClass:classTagValue tagName="web:filter" paramName="icon"/></icon>
     </XDtClass:ifHasClassTag>
      <filter-name><XDtClass:classTagValue tagName="web:filter" paramName="name"/></filter-name>
     <XDtClass:ifHasClassTag tagName="web:filter" paramName="display-name">
      <display-name><XDtClass:classTagValue tagName="web:filter" paramName="display-name"/></display-name>
     </XDtClass:ifHasClassTag>
     <XDtClass:ifHasClassTag tagName="web:filter" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:filter" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <filter-class><XDtClass:fullClassName/></filter-class>
     <XDtClass:forAllClassTags tagName="web:filter-init-param">
      <init-param>
         <param-name><XDtClass:classTagValue tagName="web:filter-init-param" paramName="name"/></param-name>
         <param-value><XDtClass:classTagValue tagName="web:filter-init-param" paramName="value"/></param-value>
        <XDtClass:ifHasClassTag tagName="web:filter-init-param" paramName="description">
         <description><![CDATA[<XDtClass:classTagValue tagName="web:filter-init-param" paramName="description"/>]]></description>
        </XDtClass:ifHasClassTag>
      </init-param>
     </XDtClass:forAllClassTags>
   </filter>
  </XDtClass:forAllClasses>
-->
  <XDtMerge:merge file="filter-mappings.xml">
    <!--
    To use non XDoclet filter-mappings, create a filter-mappings.xml file that
    contains the additional filter-mappings and place it in your
    project's merge dir.
    -->
  </XDtMerge:merge>
  <!--
  <XDtClass:forAllClasses type="javax.servlet.Filter" abstract="false">
  <XDtClass:forAllClassTags tagName="web:filter-mapping">
   <filter-mapping>
      <filter-name><XDtClass:classTagValue tagName="web:filter" paramName="name"/></filter-name>
    <XDtClass:ifHasClassTag tagName="web:filter-mapping" paramName="url-pattern">
      <url-pattern><XDtClass:classTagValue tagName="web:filter-mapping" paramName="url-pattern"/></url-pattern>
    </XDtClass:ifHasClassTag>
    <XDtClass:ifDoesntHaveClassTag tagName="web:filter-mapping" paramName="url-pattern">
     <XDtClass:ifHasClassTag tagName="web:filter-mapping" paramName="servlet-name">
      <servlet-name><XDtClass:classTagValue tagName="web:filter-mapping" paramName="servlet-name"/></servlet-name>
     </XDtClass:ifHasClassTag>
    </XDtClass:ifDoesntHaveClassTag>
    <XDtConfig:ifConfigParamGreaterOrEquals paramName="Servletspec" value="2.4">
     <XDtClass:ifHasClassTag tagName="web:filter-mapping" paramName="dispatcher">
      <XDtClass:forAllClassTagTokens tagName="web:filter-mapping" paramName="dispatcher" delimiter=",">
        <dispatcher><XDtClass:currentToken/></dispatcher>
      </XDtClass:forAllClassTagTokens>
     </XDtClass:ifHasClassTag>
    </XDtConfig:ifConfigParamGreaterOrEquals>
   </filter-mapping>
  </XDtClass:forAllClassTags>
  </XDtClass:forAllClasses>
-->
  <XDtMerge:merge file="listeners.xml">
    <!--
    To use non XDoclet listeners, create a listeners.xml file that
    contains the additional listeners and place it in your
    project's merge dir.
    -->
  </XDtMerge:merge>
  
  <XDtClass:forAllClasses type="javax.servlet.ServletContextListener,javax.servlet.ServletContextAttributeListener,javax.servlet.http.HttpSessionListener,javax.servlet.http.HttpSessionAttributeListener" abstract="false">
   <XDtClass:forAllClassTags tagName="web:listener">
   <listener>
      <listener-class><XDtClass:fullClassName/></listener-class>
   </listener>
   </XDtClass:forAllClassTags>
  </XDtClass:forAllClasses> 

 </XDtConfig:ifConfigParamGreaterOrEquals>

 <XDtClass:forAllClasses abstract="false">
  <XDtClass:forAllClassTags tagName="web:servlet" superclasses="false">
   <servlet>
    <XDtConfig:ifConfigParamGreaterOrEquals paramName="ServletSpec" value="2.4">
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:servlet" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="display-name">
      <display-name><XDtClass:classTagValue tagName="web:servlet" paramName="display-name"/></display-name>
     </XDtClass:ifHasClassTag>
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="icon">
      <icon>
       <small-icon><XDtClass:classTagValue tagName="web:servlet" paramName="icon"/></small-icon>
       <large-icon><XDtClass:classTagValue tagName="web:servlet" paramName="icon"/></large-icon>
      </icon>
     </XDtClass:ifHasClassTag>
      <servlet-name><XDtClass:classTagValue tagName="web:servlet" paramName="name"/></servlet-name>
     <XDtClass:ifDoesntHaveClassTag tagName="web:servlet" paramName="jsp-file">
      <servlet-class><XDtClass:fullClassName/></servlet-class>
     </XDtClass:ifDoesntHaveClassTag>
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="jsp-file">
      <jsp-file><XDtClass:classTagValue tagName="web:servlet" paramName="jsp-file"/></jsp-file>
     </XDtClass:ifHasClassTag>
    </XDtConfig:ifConfigParamGreaterOrEquals>
    
    <XDtConfig:ifConfigParamNotGreaterOrEquals paramName="ServletSpec" value="2.4">
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="icon">
      <icon>
       <small-icon><XDtClass:classTagValue tagName="web:servlet" paramName="icon"/></small-icon>
       <large-icon><XDtClass:classTagValue tagName="web:servlet" paramName="icon"/></large-icon>
      </icon>
     </XDtClass:ifHasClassTag>
      <servlet-name><XDtClass:classTagValue tagName="web:servlet" paramName="name"/></servlet-name>
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="display-name">
      <display-name><XDtClass:classTagValue tagName="web:servlet" paramName="display-name"/></display-name>
     </XDtClass:ifHasClassTag>
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:servlet" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
     <XDtClass:ifHasClassTag tagName="web:servlet" paramName="jsp-file">
      <jsp-file><XDtClass:classTagValue tagName="web:servlet" paramName="jsp-file"/></jsp-file>
     </XDtClass:ifHasClassTag>
     <XDtClass:ifDoesntHaveClassTag tagName="web:servlet" paramName="jsp-file">
      <servlet-class><XDtClass:fullClassName/></servlet-class>
     </XDtClass:ifDoesntHaveClassTag>
    </XDtConfig:ifConfigParamNotGreaterOrEquals>

    <XDtClass:forAllClassTags tagName="web:servlet-init-param">
      <init-param>
     <XDtConfig:ifConfigParamGreaterOrEquals paramName="ServletSpec" value="2.4">
      <XDtClass:ifHasClassTag tagName="web:servlet-init-param" paramName="description">
         <description><![CDATA[<XDtClass:classTagValue tagName="web:servlet-init-param" paramName="description"/>]]></description>
      </XDtClass:ifHasClassTag>
     </XDtConfig:ifConfigParamGreaterOrEquals>      
         <param-name><XDtClass:classTagValue tagName="web:servlet-init-param" paramName="name"/></param-name>
         <param-value><XDtClass:classTagValue tagName="web:servlet-init-param" paramName="value"/></param-value>
     <XDtConfig:ifConfigParamNotGreaterOrEquals paramName="ServletSpec" value="2.4">
      <XDtClass:ifHasClassTag tagName="web:servlet-init-param" paramName="description">
         <description><![CDATA[<XDtClass:classTagValue tagName="web:servlet-init-param" paramName="description"/>]]></description>
      </XDtClass:ifHasClassTag>
     </XDtConfig:ifConfigParamNotGreaterOrEquals>
      </init-param>
    </XDtClass:forAllClassTags>

    <XDtClass:ifHasClassTag tagName="web:servlet" paramName="load-on-startup">
      <load-on-startup><XDtClass:classTagValue tagName="web:servlet" paramName="load-on-startup"/></load-on-startup>
    </XDtClass:ifHasClassTag>
   <XDtConfig:ifConfigParamGreaterOrEquals paramName="Servletspec" value="2.3">
    <XDtClass:ifHasClassTag tagName="web:servlet" paramName="run-as">
      <run-as>
         <role-name><XDtClass:classTagValue tagName="web:servlet" paramName="run-as" /></role-name>
      </run-as>
    </XDtClass:ifHasClassTag>
   </XDtConfig:ifConfigParamGreaterOrEquals>

   <XDtMerge:merge file="web-sec-rolerefs-{0}.xml">
    <XDtClass:forAllClassTags tagName="web:security-role-ref">
      <security-role-ref>
        <XDtClass:ifHasClassTag tagName="web:security-role-ref" paramName="description">
         <description><![CDATA[<XDtClass:classTagValue tagName="web:security-role-ref" paramName="description"/>]]></description>
        </XDtClass:ifHasClassTag>
         <role-name><XDtClass:classTagValue tagName="web:security-role-ref" paramName="role-name"/></role-name>
         <role-link><XDtClass:classTagValue tagName="web:security-role-ref" paramName="role-link"/></role-link>
      </security-role-ref>
    </XDtClass:forAllClassTags>
   </XDtMerge:merge>
   </servlet>
  </XDtClass:forAllClassTags>
 </XDtClass:forAllClasses>

 <XDtMerge:merge file="servlets.xml">
  <!--
  To use non XDoclet servlets, create a servlets.xml file that
  contains the additional servlets (eg Struts) and place it in your
  project's merge dir.  Don't include servlet-mappings in this file,
  include them in a file called servlet-mappings.xml and put that in
  the same directory.
  -->
 </XDtMerge:merge>

  <XDtMerge:merge file="servlet-mappings.xml">
  </XDtMerge:merge>

  <XDtClass:forAllClasses>
  <XDtClass:forAllClassTags tagName="web:servlet-mapping">
   <servlet-mapping>
      <servlet-name><XDtClass:classTagValue tagName="web:servlet" paramName="name"/></servlet-name>
      <url-pattern><XDtClass:classTagValue tagName="web:servlet-mapping" paramName="url-pattern"/></url-pattern>
   </servlet-mapping>
  </XDtClass:forAllClassTags>
  </XDtClass:forAllClasses>

  <XDtConfig:ifHasConfigParam paramName="Sessiontimeout">
   <session-config>
      <session-timeout><XDtConfig:configParameterValue paramName="Sessiontimeout"/></session-timeout>
   </session-config>
  </XDtConfig:ifHasConfigParam>

  <XDtMerge:merge file="mime-mappings.xml">
   <!--
   To specify mime mappings, create a file named mime-mappings.xml, put it in your project's mergedir.
   Organize mime-mappings.xml following this DTD slice:

   <!ELEMENT mime-mapping (extension, mime-type)>
   -->
  </XDtMerge:merge>

   <XDtMerge:merge file="welcomefiles.xml">
   </XDtMerge:merge>
  <XDtConfig:ifHasConfigParam paramName="welcomeFiles">
   <welcome-file-list>
    <XDtConfig:forAllConfigParameters paramName="welcomeFiles">
      <welcome-file><XDtConfig:configParameterValue paramName="welcomeFiles.file"/></welcome-file>
    </XDtConfig:forAllConfigParameters>
   </welcome-file-list>
  </XDtConfig:ifHasConfigParam>

  <XDtMerge:merge file="error-pages.xml">
   <!--
   To specify error pages, create a file named error-pages.xml, put it in your project's mergedir.
   Organize error-pages.xml following this DTD slice:

   <!ELEMENT error-page ((error-code | exception-type), location)>
   -->
  </XDtMerge:merge>

  <XDtMerge:merge file="taglibs.xml">
  <!--
  To add taglibs by xml, create a file called taglibs.xml and place it
  in your merge dir.
  -->
  </XDtMerge:merge>

  <XDtConfig:forAllConfigParameters paramName="tagLibs">
   <taglib>
      <taglib-uri><XDtConfig:configParameterValue paramName="tagLibs.uri"/></taglib-uri>
      <taglib-location><XDtConfig:configParameterValue paramName="tagLibs.location"/></taglib-location>
   </taglib>
  </XDtConfig:forAllConfigParameters>

 <XDtMerge:merge file="web-resource-env-refs.xml">
 </XDtMerge:merge>
 <XDtWeb:forAllResourceEnvRefs>
   <resource-env-ref <XDtId:prefixedId prefix="ResEnvRef"/>>
     <XDtClass:ifHasClassTag tagName="web:resource-env-ref" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:resource-env-ref" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <resource-env-ref-name><XDtClass:classTagValue tagName="web:resource-env-ref" paramName="name"/></resource-env-ref-name>
      <resource-env-ref-type><XDtClass:classTagValue tagName="web:resource-env-ref" paramName="type"/></resource-env-ref-type>
   </resource-env-ref>
 </XDtWeb:forAllResourceEnvRefs>

 <XDtMerge:merge file="ejb-resourcerefs.xml">
 </XDtMerge:merge>
 <XDtClass:forAllClasses>
 <XDtMerge:merge file="ejb-resourcerefs-{0}.xml">
 </XDtMerge:merge>
 </XDtClass:forAllClasses>
 <XDtWeb:forAllResourceRefs>
   <resource-ref <XDtId:prefixedId prefix="ResRef"/>>
     <XDtClass:ifHasClassTag tagName="web:resource-ref" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:resource-ref" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <res-ref-name><XDtClass:classTagValue tagName="web:resource-ref" paramName="name"/></res-ref-name>
      <res-type><XDtClass:classTagValue tagName="web:resource-ref" paramName="type"/></res-type>
      <res-auth><XDtClass:classTagValue tagName="web:resource-ref" paramName="auth" values="Application,Container"/></res-auth>
     <XDtClass:ifHasClassTag tagName="web:resource-ref" paramName="scope">
      <res-sharing-scope><XDtClass:classTagValue tagName="web:resource-ref" paramName="scope" values="Shareable,Unshareable"/></res-sharing-scope>
     </XDtClass:ifHasClassTag>
   </resource-ref>
 </XDtWeb:forAllResourceRefs>

  <XDtMerge:merge file="web-security.xml">
   <!--
   To set up security settings for your web app, create a file named web-security.xml, put it in your project's mergedir.
   Organize web-security.xml following this DTD slice:

   <!ELEMENT security-constraint (display-name?, web-resource-collection+, auth-constraint?, user-data-constraint?)>
   <!ELEMENT web-resource-collection (web-resource-name, description?, url-pattern*, http-method*)>
   <!ELEMENT web-resource-name (#PCDATA)>
   <!ELEMENT url-pattern (#PCDATA)>
   <!ELEMENT http-method (#PCDATA)>
   <!ELEMENT user-data-constraint (description?, transport-guarantee)>
   <!ELEMENT transport-guarantee (#PCDATA)>

   <!ELEMENT login-config (auth-method?, realm-name?, form-login-config?)>
   <!ELEMENT auth-method (#PCDATA)>
   <!ELEMENT realm-name (#PCDATA)>
   <!ELEMENT form-login-config (form-login-page, form-error-page)>
   <!ELEMENT form-login-page (#PCDATA)>
   <!ELEMENT form-error-page (#PCDATA)>
   -->
  </XDtMerge:merge>

 <XDtMerge:merge file="web-sec-roles.xml">
 </XDtMerge:merge>
 <XDtWeb:forAllSecurityRoles>
   <security-role>
     <XDtClass:ifHasClassTag tagName="web:security-role" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:security-role" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <role-name><XDtClass:classTagValue tagName="web:security-role" paramName="role-name"/></role-name>
   </security-role>
 </XDtWeb:forAllSecurityRoles>

 <XDtMerge:merge file="web-env-entries.xml">
 </XDtMerge:merge>
 <XDtClass:forAllClasses>
  <XDtMerge:merge file="web-env-entries-{0}.xml">
  </XDtMerge:merge>
 </XDtClass:forAllClasses>
 <XDtWeb:forAllEnvEntries>
   <env-entry>
     <XDtClass:ifHasClassTag tagName="web:env-entry" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:env-entry" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <env-entry-name><XDtClass:classTagValue tagName="web:env-entry" paramName="name"/></env-entry-name>
     <XDtClass:ifHasClassTag tagName="web:env-entry" paramName="value">
      <env-entry-value><XDtClass:classTagValue tagName="web:env-entry" paramName="value"/></env-entry-value>
     </XDtClass:ifHasClassTag>
      <env-entry-type><XDtClass:classTagValue tagName="web:env-entry" paramName="type"/></env-entry-type>
   </env-entry>
 </XDtWeb:forAllEnvEntries>

 <XDtMerge:merge file="web-ejbrefs.xml">
 </XDtMerge:merge>

 <XDtComment:comment>
    We need to keep this forAllClasses loop so we still include the web-ejbrefs-{0}.xml file.
    However, we should question if this merge point is really necessary. Shouldn't the
    above (web-ejbrefs.xml) merge point enough?
 <XDtClass:forAllClasses>
   <XDtMerge:merge file="web-ejbrefs-{0}.xml">
   </XDtMerge:merge>
 </XDtClass:forAllClasses>
 </XDtComment:comment>

  <XDtWeb:forAllEjbRefs>
   <ejb-ref <XDtId:prefixedId prefix="EJBRef"/>>
     <XDtClass:ifHasClassTag tagName="web:ejb-ref" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:ejb-ref" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <ejb-ref-name><XDtClass:classTagValue tagName="web:ejb-ref" paramName="name"/></ejb-ref-name>
      <ejb-ref-type><XDtClass:classTagValue tagName="web:ejb-ref" paramName="type"/></ejb-ref-type>
      <home><XDtClass:classTagValue tagName="web:ejb-ref" paramName="home"/></home>
      <remote><XDtClass:classTagValue tagName="web:ejb-ref" paramName="remote"/></remote>
     <XDtClass:ifHasClassTag tagName="web:ejb-ref" paramName="link">
      <ejb-link><XDtClass:classTagValue tagName="web:ejb-ref" paramName="link"/></ejb-link>
     </XDtClass:ifHasClassTag>
   </ejb-ref>
  </XDtWeb:forAllEjbRefs>

 <XDtConfig:ifConfigParamGreaterOrEquals paramName="Servletspec" value="2.3">
 <XDtMerge:merge file="web-ejbrefs-local.xml">
 </XDtMerge:merge>

 <XDtComment:comment>
    See comment on ejb-refs above and apply the same reasoning here.
 <XDtClass:forAllClasses>
  <XDtMerge:merge file="web-ejbrefs-local-{0}.xml">
  </XDtMerge:merge>
 </XDtClass:forAllClasses>
 </XDtComment:comment>

 <XDtWeb:forAllEjbLocalRefs>
   <ejb-local-ref <XDtId:prefixedId prefix="EJBLocalRef"/>>
     <XDtClass:ifHasClassTag tagName="web:ejb-local-ref" paramName="description">
      <description><![CDATA[<XDtClass:classTagValue tagName="web:ejb-local-ref" paramName="description"/>]]></description>
     </XDtClass:ifHasClassTag>
      <ejb-ref-name><XDtClass:classTagValue tagName="web:ejb-local-ref" paramName="name"/></ejb-ref-name>
      <ejb-ref-type><XDtClass:classTagValue tagName="web:ejb-local-ref" paramName="type"/></ejb-ref-type>
      <local-home><XDtClass:classTagValue tagName="web:ejb-local-ref" paramName="home"/></local-home>
      <local><XDtClass:classTagValue tagName="web:ejb-local-ref" paramName="local"/></local>
     <XDtClass:ifHasClassTag tagName="web:ejb-local-ref" paramName="link">
      <ejb-link><XDtClass:classTagValue tagName="web:ejb-local-ref" paramName="link"/></ejb-link>
     </XDtClass:ifHasClassTag>
   </ejb-local-ref>
 </XDtWeb:forAllEjbLocalRefs>
 </XDtConfig:ifConfigParamGreaterOrEquals>
</web-app>
